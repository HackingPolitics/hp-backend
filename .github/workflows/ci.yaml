on:
  push:
  pull_request:

jobs:
  phpunit:
    name: PHPUnit (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        php:
          - '8.0'
        include:
          - php: '8.0'
            coverage: true
      fail-fast: false
    services:
      mysql:
        image: mariadb:10.5.9
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: hpo_test
          MYSQL_USER: hpo_test
          MYSQL_PASSWORD: hpo_test
        ports:
          - 3306:3306
    env:
      APP_ENV: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl, composer
          extensions: intl, json, bcmath, curl, openssl, mbstring, pdo_mysql
          coverage: pcov
          ini-values: memory_limit=-1

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Enable code coverage
        if: matrix.coverage
        run: echo "COVERAGE=1" >> $GITHUB_ENV

      - name: Install project dependencies
        run: composer install --no-interaction --no-progress --ansi

      - name: Clear test app cache
        run: composer auto-scripts --ansi

      - name: Run PHPUnit tests
        run: |
          mkdir -p build/logs/phpunit
          if [ "$COVERAGE" = '1' ]; then
            vendor/bin/phpunit --coverage-clover build/logs/phpunit/clover.xml --log-junit build/logs/phpunit/junit.xml
          else
            vendor/bin/phpunit --log-junit build/logs/phpunit/junit.xml
          fi

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: phpunit-logs-php${{ matrix.php }}
          path: build/logs/phpunit
        continue-on-error: true

      - name: Upload coverage results to Coveralls
        if: matrix.coverage
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          composer global require --prefer-dist --no-interaction --no-progress --ansi php-coveralls/php-coveralls
          export PATH="$PATH:$HOME/.composer/vendor/bin"
          coveralls build/logs/phpunit/clover.xml
        continue-on-error: true

  docker:
    name: Push Docker image to Docker Hub
    needs: phpunit
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        if: github.event_name != 'pull_request'
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract metadata (tags, labels) for PHP
        id: phpmeta
        if: github.event_name != 'pull_request'
        uses: docker/metadata-action@v3
        with:
          images: jschumanndd/hp-backend
          tags: |
            type=ref,event=branch
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          flavor: |
            latest=auto

      - name: Build and push PHP image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          target: hp_php
          tags: ${{ steps.phpmeta.outputs.tags }}
          labels: ${{ steps.phpmeta.outputs.labels }}
          cache-from: type=registry,ref=jschumanndd/hp-backend
          cache-to: type=inline

      - name: Extract metadata (tags, labels) for Nginx
        id: nginxmeta
        if: github.event_name != 'pull_request'
        uses: docker/metadata-action@v3
        with:
          images: jschumanndd/hp-backend
          tags: |
            type=ref,event=branch
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          flavor: |
            latest=auto
            prefix=nginx-

      - name: Build and push Nginx image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          target: hp_nginx
          tags: ${{ steps.nginxmeta.outputs.tags }}
          labels: ${{ steps.nginxmeta.outputs.labels }}
          cache-from: type=registry,ref=jschumanndd/hp-backend
          cache-to: type=inline
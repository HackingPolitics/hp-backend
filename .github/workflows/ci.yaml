on:
  push:
  pull_request:

jobs:
  phpunit:
    name: PHPUnit (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        php:
          - '7.4'
          - '8.0'
        include:
          - php: '8.0'
            coverage: true
      fail-fast: false
    services:
      mysql:
        image: mariadb:10.5.9
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: hpo_test
          MYSQL_USER: hpo_test
          MYSQL_PASSWORD: hpo_test
        ports:
          - 3306:3306
    env:
      APP_ENV: test
      DATABASE_URL: //hpo_test:hpo_test@mysql/hpo_test
      MAILER_DSN: native://default
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl, composer
          extensions: intl, json, bcmath, curl, openssl, mbstring, pdo_mysql
          coverage: pcov
          ini-values: memory_limit=-1
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Enable code coverage
        if: matrix.coverage
        run: echo "COVERAGE=1" >> $GITHUB_ENV
      - name: Set Composer platform config
        if: (startsWith(matrix.php, '8.0'))
        run: |
          composer config platform.php 7.4.99
      - name: Install project dependencies
        run: composer install --no-interaction --no-progress --ansi
      - name: Clear test app cache
        if: (!startsWith(matrix.php, '8.0'))
        run: bin/console cache:clear --ansi
      - name: Clear test app cache (php 8.0)
        if: (startsWith(matrix.php, '8.0'))
        run: rm -Rf var/cache/*
      - name: Run PHPUnit tests
        run: |
          mkdir -p build/logs/phpunit
          if [ "$COVERAGE" = '1' ]; then
            vendor/bin/phpunit --coverage-clover build/logs/phpunit/clover.xml --log-junit build/logs/phpunit/junit.xml
          else
            vendor/bin/phpunit --log-junit build/logs/phpunit/junit.xml
          fi
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: phpunit-logs-php${{ matrix.php }}
          path: build/logs/phpunit
        continue-on-error: true
      - name: Upload coverage results to Codecov
        if: matrix.coverage
        uses: codecov/codecov-action@v1
        with:
          name: phpunit-php${{ matrix.php }}
          flags: phpunit
          fail_ci_if_error: true
        continue-on-error: true
      - name: Upload coverage results to Coveralls
        if: matrix.coverage
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          composer global require --prefer-dist --no-interaction --no-progress --ansi cedx/coveralls
          export PATH="$PATH:$HOME/.composer/vendor/bin"
          coveralls build/logs/phpunit/clover.xml
        continue-on-error: true